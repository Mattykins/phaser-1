export declare const AMBIENT_LIGHT_FRAG = "#define SHADER_NAME AMBIENT_LIGHT_FRAG\n\nprecision highp float;\n\nuniform vec3 uLightPosition;\nuniform vec3 uLightAmbient;\nuniform vec3 uLightDiffuse;\nuniform vec3 uLightSpecular;\n\nuniform vec3 uMaterialAmbient;\nuniform vec3 uMaterialDiffuse;\nuniform vec3 uMaterialSpecular;\nuniform float uMaterialShine;\n\nuniform vec3 uCameraPosition;\n\nuniform sampler2D uTexture;\n\nvarying vec2 vTextureCoord;\nvarying vec3 vNormal;\nvarying vec3 vPosition;\n\nvoid main (void)\n{\n    vec4 color = texture2D(uTexture, vTextureCoord);\n\n    vec3 ambient = uLightAmbient * uMaterialAmbient;\n\n    vec3 norm = normalize(vNormal);\n    vec3 lightDir = normalize(uLightPosition - vPosition);\n    float diff = max(dot(norm, lightDir), 0.0);\n    vec3 diffuse = uLightDiffuse * (diff * uMaterialDiffuse);\n\n    vec3 viewDir = normalize(uCameraPosition - vPosition);\n    vec3 reflectDir = reflect(-lightDir, norm);\n    float spec = pow(max(dot(viewDir, reflectDir), 0.0), uMaterialShine);\n    vec3 specular = uLightSpecular * (spec * uMaterialSpecular);\n\n    vec3 result = (ambient + diffuse + specular) * color.rgb;\n\n    gl_FragColor = vec4(result, color.a);\n}";
//# sourceMappingURL=AMBIENT_LIGHT_FRAG.d.ts.map